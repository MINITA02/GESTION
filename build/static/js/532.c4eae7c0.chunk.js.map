{"version":3,"file":"static/js/532.c4eae7c0.chunk.js","mappings":"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","sources":["components/administrador/administrador.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../assets/css/administrador.css'\r\n\r\nconst Administrador: React.FC = () => {\r\n    const [usuarios, setUsuarios] = useState<any[]>([]);\r\n    const [username, setUsername] = useState<string>('');\r\n    const [nombre, setNombre] = useState<string>('');\r\n    const [apellido, setApellido] = useState<string>('');\r\n    const [correo, setCorreo] = useState<string>('');\r\n    const [celular, setCelular] = useState<string>('');\r\n    const [rol, setRol] = useState<string>('');\r\n    const [departamento, setDepartamento] = useState<string>('');\r\n    const [contrasena, setContrasena] = useState<string>('');\r\n    const [verificarContrasena, setVerificarContrasena] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        const usuariosGuardados = JSON.parse(localStorage.getItem('usuarios') ?? '[]');\r\n        setUsuarios(usuariosGuardados);\r\n    }, []);\r\n\r\n    const validarCamposObligatorios = () => {\r\n        if (!username || !nombre || !apellido || !correo || !celular || !rol || !contrasena || !verificarContrasena || !departamento) {\r\n            alert('Por favor, complete todos los campos obligatorios.');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const validarFormatoCorreo = () => {\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailPattern.test(correo)) {\r\n            alert('Por favor, ingrese un correo electrónico válido.');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const validarLongitudContrasena = () => {\r\n        const minPasswordLength = 4;\r\n        if (contrasena.length < minPasswordLength) {\r\n            alert(`La contraseña debe tener al menos ${minPasswordLength} caracteres.`);\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (!validarCamposObligatorios()) return;\r\n        if (!validarFormatoCorreo()) return;\r\n        if (!validarLongitudContrasena()) return;\r\n        if (contrasena !== verificarContrasena) {\r\n            alert('Las contraseñas no coinciden.');\r\n            return;\r\n        }\r\n\r\n        const nuevoUsuario = {\r\n            username,\r\n            nombre,\r\n            apellido,\r\n            correo,\r\n            celular,\r\n            rol,\r\n            departamento,\r\n            contrasena\r\n        };\r\n\r\n        const usuariosActualizados = [...usuarios, nuevoUsuario];\r\n        setUsuarios(usuariosActualizados);\r\n        localStorage.setItem('usuarios', JSON.stringify(usuariosActualizados));\r\n\r\n        setUsername('');\r\n        setNombre('');\r\n        setApellido('');\r\n        setCorreo('');\r\n        setCelular('');\r\n        setRol('');\r\n        setDepartamento('');\r\n        setContrasena('');\r\n        setVerificarContrasena('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"btn-container\">\r\n                <button onClick={() => window.location.href = '/loginAdmin'}>Cerrar sesión</button>\r\n            </div>\r\n            <div className=\"btn-container\">\r\n                <button onClick={() => window.location.href = '/administrar-Usuarios'}>Editar usuarios</button>\r\n            </div>\r\n            <h1 className=\"h1\">Gestión de Informes y Usuarios</h1>\r\n            <div className=\"section\">\r\n                <h2>Administración de Usuarios</h2>\r\n                <form onSubmit={handleSubmit} id=\"usuarioForm\">\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Nombre de usuario\" required />\r\n                    <input type=\"text\" value={nombre} onChange={(e) => setNombre(e.target.value)} placeholder=\"Nombre\" required />\r\n                    <input type=\"text\" value={apellido} onChange={(e) => setApellido(e.target.value)} placeholder=\"Apellido\" required />\r\n                    <input type=\"email\" value={correo} onChange={(e) => setCorreo(e.target.value)} placeholder=\"Correo electrónico\" required />\r\n                    <input type=\"tel\" value={celular} onChange={(e) => setCelular(e.target.value)} placeholder=\"Número de celular\" required />\r\n                    <select value={departamento} onChange={(e) => setDepartamento(e.target.value)} required>\r\n                        <option value=\"\">Seleccione un departamento</option>\r\n                        <option value=\"informatica\">Informática</option>\r\n                        <option value=\"administracion\">Administración</option>\r\n                        <option value=\"contabilidad\">Contabilidad</option>\r\n                        <option value=\"medicina\">Medicina</option>\r\n                        <option value=\"educacion\">educacion</option>\r\n                        <option value=\"derecho\">derecho</option>\r\n                    </select>\r\n                    <select value={rol} onChange={(e) => setRol(e.target.value)} required>\r\n                        <option value=\"\">Seleccione un rol</option>\r\n                        <option value=\"visualizar\">Solo Visualizar</option>\r\n                        <option value=\"editar\">Editar</option>\r\n                        <option value=\"ninguno\">Ninguno</option>\r\n                    </select>\r\n                    <input type=\"password\" value={contrasena} onChange={(e) => setContrasena(e.target.value)} placeholder=\"Contraseña\" required />\r\n                    <input type=\"password\" value={verificarContrasena} onChange={(e) => setVerificarContrasena(e.target.value)} placeholder=\"Verificar Contraseña\" required />\r\n                    <button type=\"submit\">Crear Usuario</button>\r\n                </form>\r\n            </div>\r\n            {/* <div id=\"usuariosContainer\">\r\n                {usuarios.map((usuario, index) => (\r\n                    <div className=\"usuario\" key={index}>\r\n                        <p><strong>Nombre de usuario:</strong> {usuario.username}</p>\r\n                        <p><strong>Nombre:</strong> {usuario.nombre}</p>\r\n                        <p><strong>Apellido:</strong> {usuario.apellido}</p>\r\n                        <p><strong>Correo electrónico:</strong> {usuario.correo}</p>\r\n                        <p><strong>Número de celular:</strong> {usuario.celular}</p>\r\n                        <p><strong>Rol:</strong> {usuario.rol}</p>\r\n                        <button className=\"edit\">Editar</button>\r\n                        <button className=\"delete\">Borrar</button>\r\n                    </div>\r\n                ))}\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Administrador;\r\n"],"names":["Administrador","usuarios","setUsuarios","useState","username","setUsername","nombre","setNombre","apellido","setApellido","correo","setCorreo","celular","setCelular","rol","setRol","departamento","setDepartamento","contrasena","setContrasena","verificarContrasena","setVerificarContrasena","useEffect","_localStorage$getItem","usuariosGuardados","JSON","parse","localStorage","getItem","_jsxs","className","children","_jsx","onClick","window","location","href","onSubmit","event","preventDefault","alert","test","length","concat","usuariosActualizados","setItem","stringify","id","type","value","onChange","e","target","placeholder","required"],"sourceRoot":""}