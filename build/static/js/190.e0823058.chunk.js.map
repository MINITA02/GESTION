{"version":3,"file":"static/js/190.e0823058.chunk.js","mappings":"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","sources":["components/administrador/administrarUsuarios.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../assets/css/administrador.css'\r\n\r\nconst AdministrarUsuarios: React.FC = () => {\r\n    const [usuarios, setUsuarios] = useState<any[]>([]);\r\n    const [username, setUsername] = useState<string>('');\r\n    const [nombre, setNombre] = useState<string>('');\r\n    const [apellido, setApellido] = useState<string>('');\r\n    const [correo, setCorreo] = useState<string>('');\r\n    const [celular, setCelular] = useState<string>('');\r\n    const [rol, setRol] = useState<string>('');\r\n    const [departamento, setDepartamento] = useState<string>('');\r\n    const [contrasena, setContrasena] = useState<string>('');\r\n    const [verificarContrasena, setVerificarContrasena] = useState<string>('');\r\n    const [isEditing, setIsEditing] = useState<boolean>(false);\r\n    const [editingIndex, setEditingIndex] = useState<number | null>(null);\r\n\r\n    useEffect(() => {\r\n        const usuariosGuardados = JSON.parse(localStorage.getItem('usuarios') ?? '[]');\r\n        setUsuarios(usuariosGuardados);\r\n    }, []);\r\n\r\n    const validarCamposObligatorios = () => {\r\n        if (!username || !nombre || !apellido || !correo || !celular || !rol || !contrasena || !verificarContrasena) {\r\n            alert('Por favor, complete todos los campos obligatorios.');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const validarFormatoCorreo = () => {\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailPattern.test(correo)) {\r\n            alert('Por favor, ingrese un correo electrónico válido.');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const validarLongitudContrasena = () => {\r\n        const minPasswordLength = 4;\r\n        if (contrasena.length < minPasswordLength) {\r\n            alert(`La contraseña debe tener al menos ${minPasswordLength} caracteres.`);\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (!validarCamposObligatorios()) return;\r\n        if (!validarFormatoCorreo()) return;\r\n        if (!validarLongitudContrasena()) return;\r\n        if (contrasena !== verificarContrasena) {\r\n            alert('Las contraseñas no coinciden.');\r\n            return;\r\n        }\r\n\r\n        const nuevoUsuario = {\r\n            username,\r\n            nombre,\r\n            apellido,\r\n            correo,\r\n            celular,\r\n            rol,\r\n            departamento,\r\n            contrasena\r\n        };\r\n\r\n        let usuariosActualizados;\r\n        if (isEditing && editingIndex !== null) {\r\n            usuariosActualizados = [...usuarios];\r\n            usuariosActualizados[editingIndex] = nuevoUsuario;\r\n            setIsEditing(false);\r\n            setEditingIndex(null);\r\n        } else {\r\n            usuariosActualizados = [...usuarios, nuevoUsuario];\r\n        }\r\n\r\n        setUsuarios(usuariosActualizados);\r\n        localStorage.setItem('usuarios', JSON.stringify(usuariosActualizados));\r\n\r\n        setUsername('');\r\n        setNombre('');\r\n        setApellido('');\r\n        setCorreo('');\r\n        setCelular('');\r\n        setRol('');\r\n        setDepartamento('');\r\n        setContrasena('');\r\n        setVerificarContrasena('');\r\n    };\r\n\r\n    const handleEdit = (index: number) => {\r\n        const usuario = usuarios[index];\r\n        setUsername(usuario.username);\r\n        setNombre(usuario.nombre);\r\n        setApellido(usuario.apellido);\r\n        setCorreo(usuario.correo);\r\n        setCelular(usuario.celular);\r\n        setRol(usuario.rol);\r\n        setDepartamento(usuario.departamento);\r\n        setContrasena(usuario.contrasena);\r\n        setVerificarContrasena(usuario.contrasena);\r\n        setIsEditing(true);\r\n        setEditingIndex(index);\r\n    };\r\n\r\n    const handleDelete = (index: number) => {\r\n        const usuariosActualizados = usuarios.filter((_, i) => i !== index);\r\n        setUsuarios(usuariosActualizados);\r\n        localStorage.setItem('usuarios', JSON.stringify(usuariosActualizados));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"btn-container\">\r\n                <button onClick={() => window.location.href = './loginAdmin'}>Cerrar sesión</button>\r\n            </div>\r\n            <h1 className=\"h1\">Gestión de Informes y Usuarios</h1>\r\n            <div className=\"section\">\r\n                <h2>Administración de Usuarios</h2>\r\n                <form onSubmit={handleSubmit} id=\"usuarioForm\">\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Nombre de usuario\" required />\r\n                    <input type=\"text\" value={nombre} onChange={(e) => setNombre(e.target.value)} placeholder=\"Nombre\" required />\r\n                    <input type=\"text\" value={apellido} onChange={(e) => setApellido(e.target.value)} placeholder=\"Apellido\" required />\r\n                    <input type=\"email\" value={correo} onChange={(e) => setCorreo(e.target.value)} placeholder=\"Correo electrónico\" required />\r\n                    <input type=\"tel\" value={celular} onChange={(e) => setCelular(e.target.value)} placeholder=\"Número de celular\" required />\r\n                    <select value={departamento} onChange={(e) => setDepartamento(e.target.value)} required>\r\n                        <option value=\"\">Seleccione un departamento</option>\r\n                        <option value=\"informatica\">Informática</option>\r\n                        <option value=\"administracion\">Administración</option>\r\n                        <option value=\"contabilidad\">Contabilidad</option>\r\n                        <option value=\"medicina\">Medicina</option>\r\n                        <option value=\"educacion\">educacion</option>\r\n                        <option value=\"derecho\">derecho</option>\r\n                    </select>\r\n                    <select value={rol} onChange={(e) => setRol(e.target.value)} required>\r\n                        <option value=\"\">Seleccione un rol</option>\r\n                        <option value=\"visualizar\">Solo Visualizar</option>\r\n                        <option value=\"editar\">Editar</option>\r\n                        <option value=\"ninguno\">Ninguno</option>\r\n                    </select>\r\n                    <input type=\"password\" value={contrasena} onChange={(e) => setContrasena(e.target.value)} placeholder=\"Contraseña\" required />\r\n                    <input type=\"password\" value={verificarContrasena} onChange={(e) => setVerificarContrasena(e.target.value)} placeholder=\"Verificar Contraseña\" required />\r\n                    <button type=\"submit\">{isEditing ? 'Actualizar Usuario' : 'Crear Usuario'}</button>\r\n                </form>\r\n            </div>\r\n            <div id=\"usuariosContainer\">\r\n                {usuarios.map((usuario, index) => (\r\n                    <div className=\"usuario\" key={index}>\r\n                        <p><strong>Nombre de usuario:</strong> {usuario.username}</p>\r\n                        <p><strong>Nombre:</strong> {usuario.nombre}</p>\r\n                        <p><strong>Apellido:</strong> {usuario.apellido}</p>\r\n                        <p><strong>Correo electrónico:</strong> {usuario.correo}</p>\r\n                        <p><strong>Número de celular:</strong> {usuario.celular}</p>\r\n                        <p><strong>Rol:</strong> {usuario.rol}</p>\r\n                        <p><strong>Departamento:</strong> {usuario.departamento}</p>\r\n                        <button className=\"edit\" onClick={() => handleEdit(index)}>Editar</button>\r\n                        <button className=\"delete\" onClick={() => handleDelete(index)}>Borrar</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdministrarUsuarios;\r\n"],"names":["AdministrarUsuarios","usuarios","setUsuarios","useState","username","setUsername","nombre","setNombre","apellido","setApellido","correo","setCorreo","celular","setCelular","rol","setRol","departamento","setDepartamento","contrasena","setContrasena","verificarContrasena","setVerificarContrasena","isEditing","setIsEditing","editingIndex","setEditingIndex","useEffect","_localStorage$getItem","usuariosGuardados","JSON","parse","localStorage","getItem","_jsxs","className","children","_jsx","onClick","window","location","href","onSubmit","event","preventDefault","alert","test","length","concat","nuevoUsuario","usuariosActualizados","setItem","stringify","id","type","value","onChange","e","target","placeholder","required","map","usuario","index","handleEdit","filter","_","i","handleDelete"],"sourceRoot":""}